/*
  https://developer.mozilla.org/en/docs/Web/CSS/box-shadow
  box-shadow: [inset?] [top] [left] [blur] [size] [color];

  Tips:
    - We're setting all the blurs to 0 since we want a solid fill.
    - Add the inset keyword so the box-shadow is on the inside of the element
    - Animating the inset shadow on hover looks like the element is filling in from whatever side you specify ([top] and [left] accept negative values to become [bottom] and [right])
    - Multiple shadows can be stacked
    - If you're animating multiple shadows, be sure to keep the same number of shadows so the animation is smooth. Otherwise, you'll get something choppy.
*/
.fill:hover,
.fill:focus {
  box-shadow: inset 0 0 0 2em var(--hover);
}

.pulse:hover,
.pulse:focus {
  -webkit-animation: pulse 1s;
  animation: pulse 1s;
  box-shadow: 0 0 0 2em rgba(255, 255, 255, 0);
}

@-webkit-keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 var(--hover);
  }
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 var(--hover);
  }
}
.closed:hover,
.closed:focus {
  box-shadow: inset -3.5em 0 0 0 var(--hover), inset 3.5em 0 0 0 var(--hover);
}

.raise:hover,
.raise:focus {
  box-shadow: 0 0.5em 0.5em -0.4em white;
  -webkit-transform: translateY(-0.25em);
  transform: translateY(-0.25em);
}

.up:hover,
.up:focus {
  box-shadow: inset 0 -3.25em 0 0 #fac564;
}

.slide:hover,
.slide:focus {
  box-shadow: inset 6.5em 0 0 0 var(--hover);
}

.offset {
  box-shadow: 0.3em 0.3em 0 0 var(--color), inset 0.3em 0.3em 0 0 var(--color);
}
.offset:hover,
.offset:focus {
  box-shadow: 0 0 0 0 var(--hover), inset 6em 3.5em 0 0 var(--hover);
}

.fill {
  --color: #a972cb;
  --hover: #cb72aa;
}

.pulse {
  --color: #ef6eae;
  --hover: #ef8f6e;
}

.closed {
  --color: #fac564;
  --hover: #fac564;
}

.raise {
  --color: #fac564;
  --hover: #fac564;
  &:hover {
    color: white !important;
    border: 1px solid white !important;
  }
}

.up {
  --color: #fac564;
  --hover: #fac564;
}

.slide {
  --color: #fac564;
  --hover: #fac564;
}

.offset {
  --color: #fac564;
  --hover: #fac564;
}

.btn-effect {
  color: var(--color);
  -webkit-transition: 0.25s;
  transition: 0.5s;
}
.btn-effect:hover,
.btn-effect:focus {
  border-color: var(--hover);
  color: black;
}

// body {
//   color: #fff;
//   background: #17181c;
//   font: 300 1em "Fira Sans", sans-serif;
//   -webkit-box-pack: center;
//   justify-content: center;
//   align-content: center;
//   -webkit-box-align: center;
//   align-items: center;
//   text-align: center;
//   min-height: 100vh;
//   display: -webkit-box;
//   display: flex;
// }

.btn-effect {
  background: none;
  border: 2px solid;
}

// h1 {
//   font-weight: 400;
// }

// code {
//   color: #e4cb58;
//   font: inherit;
// }
.btn-red {
  background-color: rgb(145, 8, 8);
  color: white;
  &:hover {
    opacity: 70%;
    color: white;
  }
}
